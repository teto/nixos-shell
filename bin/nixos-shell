#!/usr/bin/env bash

set -euo pipefail

script_dir="$(dirname "$(readlink -f "$0")")"

nixos_config=vm.nix
while [[ $# -gt 0 ]]; do
  case "$1" in
  --)
    shift
    break
    ;;
  *)
    nixos_config="$1"
    shift
    ;;
  esac
done

export QEMU_NIXOS_CONFIG="$(readlink -f "$nixos_config")"

tempdir=$(mktemp -d)
cleanup() {
  rm -rf "$tempdir"
}
trap cleanup EXIT SIGINT SIGQUIT ERR

# le vm fait en fait reference a vm = vmConfig.system.build.vm;
# nix-build '<nixpkgs/nixos>' -A vm -k \
#   -I "nixos-config=${script_dir}/../share/nixos-shell/nixos-shell.nix" \
#   -o "${tempdir}/result" "$@"


# need my fork that makes nixosTesting globally available
# nix-build -A nixosTesting.testDriver  '<nixpkgs>' -o "${tempdir}/test-driver"
nix-build -A testMatt "${script_dir}/../share/nixos-shell/driver.nix"  -o "${tempdir}/test-driver"


# Look at makeTests in nixos/lib/testing.nix to see how it is called
# "${tempdir}/test-driver/bin/nixos-test-driver"

# ln -s ${testDriver}/bin/nixos-test-driver $out/bin/
# vms=($(for i in ${toString vms}; do echo $i/bin/run-*-vm; done))
# wrapProgram $out/bin/nixos-test-driver \
#   --add-flags "''${vms[*]}" \
#   ${lib.optionalString enableOCR
#     "--prefix PATH : '${ocrProg}/bin:${imagemagick_tiff}/bin'"} \
#   --run "export testScript=\"\$(cat $out/test-script)\"" \
#   --set VLANS '${toString vlans}'
# ln -s ${testDriver}/bin/nixos-test-driver $out/bin/nixos-run-vms
# wrapProgram $out/bin/nixos-run-vms \
#   --add-flags "''${vms[*]}" \
#   ${lib.optionalString enableOCR "--prefix PATH : '${ocrProg}/bin'"} \
#   --set tests 'startAll; joinAll;' \
#   --set VLANS '${toString vlans}' \
#   ${lib.optionalString (builtins.length vms == 1) "--set USE_SERIAL 1"}
"${tempdir}/result/bin/"run-*-vm
